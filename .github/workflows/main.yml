name: HyperExecute-Failfast

on:
  schedule:
    - cron: "24 10 * * *"  # Runs at 3:13 PM IST every day
  workflow_dispatch:
    inputs:
      username:
        description: "LT Username (Optional)"
        required: false
      accessKey:
        description: "LT Access Key (Optional)"
        required: false
      sampleRepoLink:
        description: "Link to the HyperExecute sample repo"
        default: "https://github.com/john190501/hyperexecute-failfast"
        required: false

jobs:
  HyperExecute-Failfast:
    runs-on: windows-latest
    timeout-minutes: 15

    env:
      LT_USERNAME: ${{ secrets.LT_USERNAME }}
      LT_ACCESS_KEY: ${{ secrets.LT_ACCESS_KEY }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set Credentials
        shell: bash
        run: |
          echo "Setting up credentials..."

          # Ensure secrets are always set
          if [[ -n "${{ github.event.inputs.username }}" ]]; then
            echo "Using provided credentials from input"
            echo "LT_USERNAME=${{ github.event.inputs.username }}" >> $GITHUB_ENV
            echo "LT_ACCESS_KEY=${{ github.event.inputs.accessKey }}" >> $GITHUB_ENV
          else
            echo "Using credentials from Secrets"
            echo "LT_USERNAME=${{ secrets.LT_USERNAME }}" >> $GITHUB_ENV
            echo "LT_ACCESS_KEY=${{ secrets.LT_ACCESS_KEY }}" >> $GITHUB_ENV
          fi

      - name: Validate Credentials
        shell: bash
        run: |
          source $GITHUB_ENV  # Load variables
          if [[ -z "$LT_USERNAME" || -z "$LT_ACCESS_KEY" ]]; then
            echo "❌ ERROR: Missing LT_USERNAME or LT_ACCESS_KEY. Exiting..."
            exit 1
          else
            echo "✅ Credentials successfully set."
          fi

      - name: Set Repository Link
        shell: bash
        run: |
          if [[ -n "${{ github.event.inputs.sampleRepoLink }}" ]]; then
            echo "Using repository link from manual trigger"
            echo "REPO_LINK=${{ github.event.inputs.sampleRepoLink }}" >> $GITHUB_ENV
          else
            echo "Using default repository link for scheduled runs"
            echo "REPO_LINK=https://github.com/john190501/hyperexecute-failfast" >> $GITHUB_ENV
          fi

      - name: Validate Repository Link
        shell: bash
        run: |
          source $GITHUB_ENV  # Load variables
          if [[ -z "$REPO_LINK" ]]; then
            echo "❌ ERROR: Missing repository link. Exiting..."
            exit 1
          else
            echo "✅ Repository link set: $REPO_LINK"
          fi

      - name: Download Sample Project
        shell: bash
        run: |
          source $GITHUB_ENV  # Load variables
          echo "Cloning repository..."
          git clone "$REPO_LINK"
          if [[ $? -ne 0 ]]; then
            echo "❌ ERROR: Failed to clone repository."
            exit 1
          fi
          echo "✅ Repository cloned successfully."

      - name: Install HyperExecute CLI
        shell: bash
        run: |
          echo "Downloading HyperExecute CLI..."
          curl -O https://downloads.lambdatest.com/hyperexecute/windows/hyperexecute.exe
          if [[ $? -ne 0 ]]; then
            echo "❌ ERROR: Failed to download HyperExecute CLI."
            exit 1
          fi
          echo "✅ HyperExecute CLI downloaded successfully."

      - name: Execute Test Suite
        shell: bash
        run: |
          source $GITHUB_ENV  # Load variables
          echo "Executing tests on HyperExecute..."
          ./hyperexecute --user $LT_USERNAME --key $LT_ACCESS_KEY --config yaml/failfast.yaml
          if [[ $? -ne 0 ]]; then
            echo "❌ ERROR: Test execution failed."
            exit 1
          fi
          echo "✅ Tests executed successfully."
